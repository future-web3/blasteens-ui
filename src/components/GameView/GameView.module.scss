@mixin btn-border-drawing(
  $color: #ccc,
  $hover: black,
  $width: 100px,
  $vertical: top,
  $horizontal: left,
  $duration: 0.25s
) {
  box-shadow: inset 0 0 0 $width $color;
  color: $color;
  transition: color $duration $duration/3;
  position: relative;

  &::before,
  &::after {
    border: 0 solid transparent;
    box-sizing: border-box;
    content: "";
    pointer-events: none;
    position: absolute;
    width: 0;
    height: 0;

    #{$vertical}: 0;
    #{$horizontal}: 0;
  }

  &::before {
    $h-side: if($horizontal == "left", "right", "left");

    border-#{$vertical}-width: $width;
    border-#{$h-side}-width: $width;
  }

  &::after {
    $v-side: if($vertical == "top", "bottom", "top");

    border-#{$v-side}-width: $width;
    border-#{$horizontal}-width: $width;
  }

  &:hover {
    color: $hover;

    &::before,
    &::after {
      border-color: $hover;
      transition:
        border-color 0s,
        width $duration,
        height $duration;
      width: 100%;
      height: 100%;
    }

    &::before {
      transition-delay: 0s, 0s, $duration;
    }

    &::after {
      transition-delay: 0s, $duration, 0s;
    }
  }
}

.gameGlossaryContainer {
  display: grid;
  width: 100%;
  height: 100%;
  grid-template-rows: auto 1fr;
  place-items: center;
  background-color: #1f1a25;
  font:
    700 1.2rem "Roboto Slab",
    sans-serif;

  .gameGlossaryHeader {
    grid-column: span 3;
    text-align: center;
    color: white;

    hr {
      border-color: #2ecc71;
    }
  }

  .gameGlossaryContent {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    place-items: center;

    .gameGlossarySideBlock {
      background-color: #2ecc71;
      padding: 10px;
      text-align: center;
      min-width: 300px;
      min-height: 600px;
    }

    .gameGlossaryFrame {
      width: 800px;
      height: 600px;
      margin: 0 auto;

      .gameGlossaryFilter {
        width: 100%;
        height: 100%;
        display: flex;
        background-color: rgba(255, 255, 255, 0.486);
        background-blend-mode: overlay;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        top: 0;

        .gameGlossaryButtonContainer {
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items: center;
          width: 300px;
          height: 300px;
          background: rgba(31, 26, 37, 1);
          animation: corner 3s;
          border-radius: 50%;
          animation-iteration-count: infinite;
          animation-timing-function: linear;
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          margin: auto;

          .gameGlossaryWeb3Button {
            width: 100px;
            cursor: pointer;
            background: none;
            border: none;
          }

          .btn {
            background: none;
            border: none;
            cursor: pointer;
            line-height: 1.5;
            font:
              700 1.2rem "Roboto Slab",
              sans-serif;
            padding: 1em 2em;
            letter-spacing: 0.05rem;

            &:focus {
              outline: 2px dotted #55d7dc;
            }
          }

          .drawBorder {
            @include btn-border-drawing(
              rgb(207, 157, 157),
              #2ecc71,
              2px,
              bottom,
              right
            );
            font-size: 24px;
            background: #1f1a25;
          }
        }
      }
    }
  }

  .gameGlossaryDescription {
    grid-column: span 3;
    text-align: center;
    max-width: 80vw;
    padding: 10px;
    color: white;

    hr {
      border-color: #2ecc71;
    }

    p {
      font-size: smaller;
    }
  }
}

$s: 100% / 8;
$t: 0.001%;

@keyframes corner {
  #{$s * 0} {
    border-top-left-radius: 1% 50%;
  }
  #{$s * 1} {
    border-top-left-radius: 50%;
    border-top-right-radius: 50%;
  }
  #{$s * 2} {
    border-top-right-radius: 1% 50%;
  }
  #{$s * 2 + $t} {
    border-top-right-radius: 50% 1%;
  }
  #{$s * 3} {
    border-top-right-radius: 50%;
    border-bottom-right-radius: 50%;
  }
  #{$s * 4} {
    border-bottom-right-radius: 50% 1%;
  }
  #{$s * 4 + $t} {
    border-bottom-right-radius: 1% 50%;
  }
  #{$s * 5} {
    border-bottom-right-radius: 50%;
    border-bottom-left-radius: 50%;
  }
  #{$s * 6} {
    border-bottom-left-radius: 1% 50%;
  }
  #{$s * 6 + $t} {
    border-bottom-left-radius: 50% 1%;
  }
  #{$s * 7} {
    border-bottom-left-radius: 50%;
    border-top-left-radius: 50%;
  }
  #{$s * 8} {
    border-top-left-radius: 50% 1%;
  }
}

@keyframes rotateThis {
  from {
    transform: rotate(0deg) scale(1);
  }

  to {
    transform: rotate(360deg) scale(1);
  }
}
