@import '../../variables.module.scss';

.gameCardBox {
  background-color: lighten($background-color, 10%);
  padding: 2px;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;

  .gameCardContainer {
    width: 100%;
    height: 100%;
    color: $font-color;
    padding: 20px;

    .gameHeadingSection {
      display: flex;
      align-items: center;
      justify-content: space-around;

      @media screen and (max-width: $breakpoint-md) {
        gap: 10px;
        flex-direction: column;
      }

      h2 {
        padding: 0 10px;
        text-align: center;
      }

      .gameCardButtonBox {
        display: flex;
        justify-content: center;
        align-items: center;
        .gameCardButtonDisable {
          display: flex;
          text-align: center;
          align-items: center;
          justify-content: center;
          width: 100%;
          padding: 0.5rem 5rem;
          border-radius: 5rem;
          color: $fail-color;
          font-size: 1rem;
          font-weight: bold;
          letter-spacing: 0.15rem;
          transition: all 0.3s;
          position: relative;
          overflow: hidden;
          z-index: 1;
        }

        @media screen and (max-width: $breakpoint-md) {
          padding: 0rem;
        }

        .gameCardButton {
          display: flex;
          text-align: center;
          align-items: center;
          justify-content: center;
          width: 15%;
          height: 50px;
          padding: 0.5rem 5rem;
          text-decoration: none;
          color: $font-color;
          font-size: 1rem;
          font-weight: bold;
          letter-spacing: 0.15rem;
          transition: all 0.3s;
          position: relative;
          overflow: hidden;
          z-index: 1;
          &:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: darken($navbar-color, 15%);
            border-radius: 5rem;
            z-index: -2;
          }
          &:before {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0%;
            height: 100%;
            background-color: $navbar-color;
            transition: all 0.3s;
            border-radius: 10rem;
            z-index: -1;
          }
          &:hover {
            color: $primary-color;
            &:before {
              width: 100%;
            }
          }
        }
      }
    }

    .gameDetailsSection {
      display: grid;
      align-items: center;
      grid-template-columns: 1fr 1fr;
      margin-top: 20px;

      @media screen and (max-width: $breakpoint-md) {
        grid-template-columns: 1fr;
        margin-top: 10px;
      }

      .gameCardLogoContainer {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 2px;

        .gameCardLogo {
          padding: 10%;
          width: 80%;

          @media screen and (max-width: $breakpoint-sm) {
            width: 100%;
          }
        }
      }

      .notPlayableWrapper {
        grid-column-start: 1;
        grid-column-end: 3;
        width: 100%;
        align-items: center;
        display: grid;
        padding: 0 30px;
        grid-template-columns: 1fr 1fr;

        @media screen and (max-width: $breakpoint-md) {
          grid-template-columns: 1fr;
          padding: 0 10px;
        }
      }

      .notPlayableWrapper:hover {
        color: black;
      }

      .notPlayableGameLogo {
        padding: 10%;
        width: 80%;

        @media screen and (max-width: $breakpoint-md) {
          width: 100%;
          margin: 0 auto;
        }
      }

      .notPlayableDescription {
        font-size: larger;

        @media screen and (max-width: $breakpoint-md) {
          font-size: 16px;
        }
      }

      .gameCardLogoContainer:active .gameCardDescription {
        display: flex;
        justify-content: space-around;
      }

      .gameCardLogoContainer:active .gameCardLogo {
        display: none;
      }

      .gameCardDescription {
        display: none;
        z-index: 2;
        border-radius: 5px;
        font-size: larger;
        color: black;
        font-weight: bold;
        padding: 10px;
      }
    }

    .gameCardDetail {
      padding: 20px;
      display: flex;
      font-size: larger;
      align-items: center;
      text-align: start;
      width: 100%;
      padding: 0 30px;

      @media screen and (max-width: $breakpoint-md) {
        font-size: 16px;
        padding: 0 10px;
      }

      .skeletonLoading {
        display: flex;
        width: 100%;
        height: 15px;
        justify-content: center;
        align-items: center;
        margin-top: 3px;
        margin-bottom: 3px;
      }

      p {
        width: 100%;

        .gameCardRow {
          display: flex;
          justify-content: space-between;

          .countdownWrapper {
            min-width: 190px;
            max-width: 200px;
            text-align: right;

            @media screen and (max-width: $breakpoint-md) {
              min-width: 100px;
              width: 100px;
              max-width: 100px;
            }
          }
        }
      }
    }
  }
}

// .gameCardBox::before {
//   content: '';
//   position: absolute;
//   inset: 0;
//   background: lighten($background-color, 30%);
//   --_g: #0000 90deg, #000 0;
//   --_p: var(--w) var(--w) no-repeat;
//   --mask: conic-gradient(from 90deg at top var(--b) left var(--b), var(--_g)) 0 0 / var(--_p),
//     conic-gradient(from 180deg at top var(--b) right var(--b), var(--_g)) 100% 0 / var(--_p),
//     conic-gradient(from 0deg at bottom var(--b) left var(--b), var(--_g)) 0 100% / var(--_p),
//     conic-gradient(from -90deg at bottom var(--b) right var(--b), var(--_g)) 100% 100% / var(--_p);
//   -webkit-mask: var(--mask);
//   mask: var(--mask);
// }

.gameCardBox:hover {
  background: linear-gradient(45deg, $primary-color, $navbar-color);
  h2 {
    font-weight: bold;
    color: $background-color;
  }
  p {
    color: $background-color;
  }
}
